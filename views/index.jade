extends layout

block content
  h1= title

  p

        p :boy: Escribe un nick
            input(type="text", id='nick', maxlength="20", size="20")

        p :speech_balloon: Escribe un mensaje
            input(type="text",id='message', maxlength="100", size="100")

        div
           a(href='http://www.emoji-cheat-sheet.com/') emoji Guide

      each mensaje in mensajes
          if mensaje
            p(class="triangle-isosceles") #{mensaje.msg}
                p(style="margin-left: 55px;margin-top:-40px") #{mensaje.nick}



      div(id='messages')

    script
        var i = 0;
        var socket = io.connect();
        var emoji_set_up = function() {
            emojify.setConfig({
                emojify_tag_type: 'div',
                emoticons_enabled: true,
                people_enabled: true,
                nature_enabled: true,
                objects_enabled: true,
                places_enabled: true,
                symbols_enabled: true
            });
            emojify.run();
        };

                $(document).ready(function () {
                    emoji_set_up();


                    //client.on('connect', runSample);

                    socket.on('mensajes', function (data) {


                    $('#mensajes').append('<b>'+JSON.parse(data).nick+': </b>'+JSON.parse(data).msg+'<br>');
                    });

                    socket.on('connected', function (data) {

                       console.log(data);
                    });

                $('#message').bind('keyup', function (e) {
                var key = e.keyCode || e.which;
                if (key === 13) {

                socket.emit('user message',{'msg': $('#message').val(), 'nick':$('#nick').val()});
                         //Se guarda el mensaje
                    //client.set(0, {'msg': $('#message').val(), 'nick':$('#nick').val()}, redis.print);

                    //if(i<5){
                    //i++;
                    //}else{
                    //i=0;
                    //}

                    console.log(i);

                $('#message').val('').focus();

                    };
                });

            //$('#boton').click(function () {
            //    socket.emit('user message',$('#message').val());
            //    $('#message').val('').focus();
            //});

        //$('#nick').bind('keyup', function (e) {
        //var key = e.keyCode || e.which;
        //if (key === 13) {
        //
        //socket.emit('user nick',$('#nick').val());
        //
        //    };
        //});

            //$('#boton2').click(function () {
            //    socket.emit('user nick',$('#nick').val());
            //    $('#nick').val('').focus();
            //});

            socket.on('user message', function (data) {

            $('#messages').append('<p class="triangle-isosceles">'+data.msg+'</p><p style="margin-left: 55px;margin-top:-40px;"><b>'+data.nick+'</b></p>');

            emojify.runOverElement($('#messages')[0]);

            });

            });


